O(NlogN) => heap, sorting, set, map
O(N) => two pointer, sliding window, hashing, stack(3 Magical conditions), pigeon hole principle.
Always pass vectors and other data structures as reference if not passed as references copy constructor will work and consume more time.

String Related
  1. To convert any base string to base 10 stoi(binaryString, nullptr, base)
  2.Integer to string
      to_string(interger)
  3.String consturctor
    string var_name(size, char);

Random number
  1. Get a random number between given range [min, max]
      randomNumber = min + rand() * (max - min + 1)


Custom Comparator
  comp(a, b) should return true if a is supposed to be placed before b //
  example
    descendingOrder(int a, int b) {
      return a > b
    }

    largestNumber(string a, string b) {
      return a + b > b + a
    }

Coversions:
  interger to String ->   to_string(interger)
  string to integer ->    stoi(string)
  ------------
  char to int        ->   x - '0'
  int to char        ->   char(x) + '0'
  ------------

Bit Magic:
  1. A xor 0 = A
  2. A xor 1 = A`
  3. A xor A = 0
  4. finding the right most set bit of a number 'A' => A & ~(A - 1)   -------------- it will only have 1 bit set and rest other bits are zero.

Creating a priority queue of pair
  priority_queue < pair < int, int > , vector < pair < int, int > >, greater < pair < int, int > > > pq;

clearing queue:
  swap(q, queue < pair <int, int > >);
